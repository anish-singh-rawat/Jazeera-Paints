import { Grid, TextField, FormHelperText } from "@mui/material";
import { TFunction } from "i18next";

type inputProps = { value: string; error: string };

type copyPriceFormTypes = {
  t: TFunction;
  setCopyData: React.Dispatch<inputProps>;
  copydata: inputProps;
  getCopyError: string;
  code: inputProps;
  setCode: React.Dispatch<inputProps>;
  needToSetCode: boolean;
  getCodeError: string;
};
export const CopyPriceForm = ({
  t,
  setCopyData,
  copydata,
  getCopyError,
  needToSetCode,
  code,
  setCode,
  getCodeError,
}: copyPriceFormTypes) => (
  <>
    <Grid mb={1}>
      <label
        htmlFor="copy-code"
        style={{ marginTop: "10px", fontSize: "12px" }}
      >
        {t("CODE")}*
      </label>
      <TextField
        id="copy-code"
        onChange={(e) => setCode({ value: e.target.value, error: "" })}
        size="small"
        fullWidth
        value={code.value}
        error={Boolean(code.error || getCodeError)}
        disabled={!needToSetCode}
        placeholder={
          !needToSetCode
            ? (t("AUTOGENERATED") as string)
            : (t("CODE") as string)
        }
      />
      <FormHelperText
        sx={{ opacity: Number(code.error || getCodeError) }}
        error={Boolean(code.error || getCodeError)}
      >
        {code.error || getCodeError || "Please input code"}
      </FormHelperText>
    </Grid>
    <Grid>
      <label
        htmlFor="copy-price-name"
        style={{ marginTop: "10px", fontSize: "12px" }}
      >
        {t("PRICE_LIST_NAME")}*
      </label>
      <TextField
        id="copy-price-name"
        onChange={(e) => setCopyData({ value: e.target.value, error: "" })}
        size="small"
        fullWidth
        value={copydata.value}
        error={Boolean(copydata.error || getCopyError)}
        placeholder={t("PRICE_LIST_NAME") as string}
      />
      <FormHelperText
        sx={{ opacity: Number(copydata.error || getCopyError) }}
        error={Boolean(copydata.error || getCopyError)}
      >
        {copydata.error || getCopyError || "Please input Name"}
      </FormHelperText>
    </Grid>
  </>
);
